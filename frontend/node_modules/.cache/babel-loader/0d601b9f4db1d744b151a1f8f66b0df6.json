{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Token } from '../index';\n\nfunction getToken() {\n  var _JSON$parse;\n\n  return (_JSON$parse = JSON.parse(sessionStorage.getItem('token'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n}\n\nexport default function useToken() {\n  _s();\n\n  const [token, setToken] = useState(Token.getToken());\n\n  const updateToken = userToken => {\n    Token.saveToken(userToken);\n    setToken(userToken.token);\n    console.log(userToken.token);\n  };\n\n  return {\n    setToken: updateToken,\n    token\n  };\n}\n\n_s(useToken, \"IaBvwgHxc5pgvbRPn6qZT3QdyYM=\");","map":{"version":3,"names":["useState","Token","getToken","JSON","parse","sessionStorage","getItem","token","useToken","setToken","updateToken","userToken","saveToken","console","log"],"sources":["C:/Users/tseela/PycharmProjects/barilan/frontend/src/hooks/usetoken/UseToken.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { Token } from '../index';\r\n\r\nfunction getToken() {\r\n  return JSON.parse(sessionStorage.getItem('token'))?.token;\r\n}\r\n\r\nexport default function useToken() {\r\n  const [token, setToken] = useState(Token.getToken());\r\n\r\n  const updateToken = userToken => {\r\n    Token.saveToken(userToken);\r\n    setToken(userToken.token);\r\n    console.log(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: updateToken,\r\n    token\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,sBAAOC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,CAAP,gDAAO,YAA6CC,KAApD;AACD;;AAED,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACjC,MAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBT,QAAQ,CAACC,KAAK,CAACC,QAAN,EAAD,CAAlC;;EAEA,MAAMQ,WAAW,GAAGC,SAAS,IAAI;IAC/BV,KAAK,CAACW,SAAN,CAAgBD,SAAhB;IACAF,QAAQ,CAACE,SAAS,CAACJ,KAAX,CAAR;IACAM,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACJ,KAAtB;EACD,CAJD;;EAMA,OAAO;IACLE,QAAQ,EAAEC,WADL;IAELH;EAFK,CAAP;AAID;;GAbuBC,Q"},"metadata":{},"sourceType":"module"}