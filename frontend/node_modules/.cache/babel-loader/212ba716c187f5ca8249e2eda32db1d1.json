{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tseela\\\\PycharmProjects\\\\barilan\\\\frontend\\\\src\\\\pages\\\\viewtrip\\\\ViewTrip.js\",\n    _s = $RefreshSig$();\n\nimport './ViewTrip.css';\nimport { useToken } from '../../hooks';\nimport { Forbidden } from '../index';\nimport { useState, useEffect } from 'react';\nimport { Loading, Navbar } from '../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewTrip() {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useToken();\n  const [trip, setTrip] = useState(null);\n  const [status, setStatus] = useState(true); // true->all good, false->forbidden access\n\n  const id = window.location.pathname;\n  useEffect(() => {\n    // if the user is connected\n    if (token) {\n      // ask for the trip\n      fetch('/getTrip', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tripID: id,\n          token: token\n        })\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        }\n\n        return null;\n      }).then(res => {\n        if (!res) {\n          // if response status is not ok update\n          setStatus(false);\n        } else {\n          // status ok, update trip in 1 sec\n          let delay_res = res;\n          setTimeout(delay_res => {\n            setTrip(res);\n          }, 1000); //wait 1 sec\n        }\n      });\n    }\n  }, [token]); // can't viewTrip if you are not connected\n  // can't also if the requested trip is not yours\n\n  if (!token || !status) {\n    return /*#__PURE__*/_jsxDEV(Forbidden, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  } // if status if ok and trip in still null, show that we are loading the trip\n\n\n  if (!trip) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-div\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  } // else, everything is ok and we are ready to display the trip\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewtrip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewtrip-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewtrip-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewtrip-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), JSON.stringify(trip, undefined, 1)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewTrip, \"X6naP/yuSED50uQdlTFn48xWmgg=\", false, function () {\n  return [useToken];\n});\n\n_c = ViewTrip;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewTrip\");","map":{"version":3,"names":["useToken","Forbidden","useState","useEffect","Loading","Navbar","ViewTrip","token","setToken","trip","setTrip","status","setStatus","id","window","location","pathname","fetch","method","headers","body","JSON","stringify","tripID","then","res","json","delay_res","setTimeout","undefined"],"sources":["C:/Users/tseela/PycharmProjects/barilan/frontend/src/pages/viewtrip/ViewTrip.js"],"sourcesContent":["import './ViewTrip.css';\nimport { useToken } from '../../hooks';\nimport { Forbidden } from '../index';\nimport { useState, useEffect } from 'react';\nimport { Loading, Navbar } from '../../components';\n\nexport default function ViewTrip() {\n    const { token, setToken } = useToken();\n    const [ trip, setTrip ] = useState(null);\n    const [ status, setStatus ] = useState(true); // true->all good, false->forbidden access\n    const id = window.location.pathname;\n\n    useEffect(() => {\n        // if the user is connected\n        if (token) {\n            // ask for the trip\n            fetch('/getTrip', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({tripID: id, token:token})\n            }).then((res) => {\n                if (res.status === 200) {\n                    return res.json();\n                }\n                return null;\n            }).then((res) => {\n                if (!res) { // if response status is not ok update\n                    setStatus(false);\n                } else { // status ok, update trip in 1 sec\n                let delay_res = res;\n                    setTimeout((delay_res) => {\n                        setTrip(res);\n                    }, 1000); //wait 1 sec\n                }\n            });\n        }\n    }, [token]);\n\n    // can't viewTrip if you are not connected\n    // can't also if the requested trip is not yours\n    if (!token || !status) {\n        return(<Forbidden />);\n    }\n\n    // if status if ok and trip in still null, show that we are loading the trip\n    if (!trip) {\n        return(\n            <div className='loading-container'>\n                <Navbar />\n                <div className='loading-div'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n\n    // else, everything is ok and we are ready to display the trip\n    return(\n        <div className='viewtrip'>\n            <div className='viewtrip-row'>\n                <div className='viewtrip-left'>\n\n                </div>\n                <div className='viewtrip-right'>\n                    \n                </div>\n            </div>\n            {JSON.stringify(trip, undefined, 1)}\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,kBAAhC;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAC/B,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBR,QAAQ,EAApC;EACA,MAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAAES,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC,CAH+B,CAGe;;EAC9C,MAAMW,EAAE,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA3B;EAEAb,SAAS,CAAC,MAAM;IACZ;IACA,IAAII,KAAJ,EAAW;MACP;MACAU,KAAK,CAAC,UAAD,EAAa;QACdC,MAAM,EAAE,MADM;QAEdC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFK;QAKdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAACC,MAAM,EAAEV,EAAT;UAAaN,KAAK,EAACA;QAAnB,CAAf;MALQ,CAAb,CAAL,CAMGiB,IANH,CAMSC,GAAD,IAAS;QACb,IAAIA,GAAG,CAACd,MAAJ,KAAe,GAAnB,EAAwB;UACpB,OAAOc,GAAG,CAACC,IAAJ,EAAP;QACH;;QACD,OAAO,IAAP;MACH,CAXD,EAWGF,IAXH,CAWSC,GAAD,IAAS;QACb,IAAI,CAACA,GAAL,EAAU;UAAE;UACRb,SAAS,CAAC,KAAD,CAAT;QACH,CAFD,MAEO;UAAE;UACT,IAAIe,SAAS,GAAGF,GAAhB;UACIG,UAAU,CAAED,SAAD,IAAe;YACtBjB,OAAO,CAACe,GAAD,CAAP;UACH,CAFS,EAEP,IAFO,CAAV,CAFG,CAIO;QACb;MACJ,CApBD;IAqBH;EACJ,CA1BQ,EA0BN,CAAClB,KAAD,CA1BM,CAAT,CAN+B,CAkC/B;EACA;;EACA,IAAI,CAACA,KAAD,IAAU,CAACI,MAAf,EAAuB;IACnB,oBAAO,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAtC8B,CAwC/B;;;EACA,IAAI,CAACF,IAAL,EAAW;IACP,oBACI;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,aAAf;QAAA,uBACI,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH,CAlD8B,CAoD/B;;;EACA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EASKY,IAAI,CAACC,SAAL,CAAeb,IAAf,EAAqBoB,SAArB,EAAgC,CAAhC,CATL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GAlEuBvB,Q;UACQN,Q;;;KADRM,Q"},"metadata":{},"sourceType":"module"}